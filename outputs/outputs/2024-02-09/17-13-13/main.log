[2024-02-09 17:13:14,848][flwr][INFO] - Starting Flower simulation, config: ServerConfig(num_rounds=3, round_timeout=None)
[2024-02-09 17:13:20,767][flwr][INFO] - Flower VCE: Ray initialized with resources: {'memory': 1255651739.0, 'node:127.0.0.1': 1.0, 'object_store_memory': 627825868.0, 'node:__internal_head__': 1.0, 'CPU': 4.0}
[2024-02-09 17:13:20,777][flwr][INFO] - Optimize your simulation with Flower VCE: https://flower.dev/docs/framework/how-to-run-simulations.html
[2024-02-09 17:13:20,777][flwr][INFO] - Flower VCE: Resources for each Virtual Client: {'num_cpus': 2, 'num_gpus': 0.0}
[2024-02-09 17:13:20,803][flwr][INFO] - Flower VCE: Creating VirtualClientEngineActorPool with 2 actors
[2024-02-09 17:13:20,805][flwr][INFO] - Initializing global parameters
[2024-02-09 17:13:20,806][flwr][INFO] - Requesting initial parameters from one random client
[2024-02-09 17:13:29,300][flwr][INFO] - Received initial parameters from one random client
[2024-02-09 17:13:29,300][flwr][INFO] - Evaluating initial parameters
[2024-02-09 17:14:17,670][flwr][INFO] - initial parameters (loss, other metrics): 0.024399539828300475, {'accuracy': 20.6640625}
[2024-02-09 17:14:17,670][flwr][INFO] - FL starting
[2024-02-09 17:14:17,679][flwr][ERROR] - Key 'lr' is not in struct
    full_key: optimizer.lr
    object_type=dict
[2024-02-09 17:14:17,689][flwr][ERROR] - Traceback (most recent call last):
  File "C:\Users\Stavros\miniconda3\envs\pyt_pg\Lib\site-packages\flwr\simulation\app.py", line 308, in start_simulation
    hist = run_fl(
           ^^^^^^^
  File "C:\Users\Stavros\miniconda3\envs\pyt_pg\Lib\site-packages\flwr\server\app.py", line 225, in run_fl
    hist = server.fit(num_rounds=config.num_rounds, timeout=config.round_timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Stavros\miniconda3\envs\pyt_pg\Lib\site-packages\flwr\server\server.py", line 109, in fit
    res_fit = self.fit_round(
              ^^^^^^^^^^^^^^^
  File "C:\Users\Stavros\miniconda3\envs\pyt_pg\Lib\site-packages\flwr\server\server.py", line 213, in fit_round
    client_instructions = self.strategy.configure_fit(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Stavros\miniconda3\envs\pyt_pg\Lib\site-packages\flwr\server\strategy\fedavg.py", line 178, in configure_fit
    config = self.on_fit_config_fn(server_round)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Stavros\Desktop\PythonProjects\FlowerYtTut\server.py", line 21, in fit_config_fn
    lr = config.optimizer.lr
         ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Stavros\miniconda3\envs\pyt_pg\Lib\site-packages\omegaconf\dictconfig.py", line 359, in __getattr__
    self._format_and_raise(key=key, value=None, cause=e)
  File "C:\Users\Stavros\miniconda3\envs\pyt_pg\Lib\site-packages\omegaconf\base.py", line 231, in _format_and_raise
    format_and_raise(
  File "C:\Users\Stavros\miniconda3\envs\pyt_pg\Lib\site-packages\omegaconf\_utils.py", line 819, in format_and_raise
    _raise(ex, cause)
  File "C:\Users\Stavros\miniconda3\envs\pyt_pg\Lib\site-packages\omegaconf\_utils.py", line 797, in _raise
    raise ex.with_traceback(sys.exc_info()[2])  # set env var OC_CAUSE=1 for full trace
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Stavros\miniconda3\envs\pyt_pg\Lib\site-packages\omegaconf\dictconfig.py", line 351, in __getattr__
    return self._get_impl(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Stavros\miniconda3\envs\pyt_pg\Lib\site-packages\omegaconf\dictconfig.py", line 442, in _get_impl
    node = self._get_child(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\Stavros\miniconda3\envs\pyt_pg\Lib\site-packages\omegaconf\basecontainer.py", line 73, in _get_child
    child = self._get_node(
            ^^^^^^^^^^^^^^^
  File "C:\Users\Stavros\miniconda3\envs\pyt_pg\Lib\site-packages\omegaconf\dictconfig.py", line 475, in _get_node
    self._validate_get(key)
  File "C:\Users\Stavros\miniconda3\envs\pyt_pg\Lib\site-packages\omegaconf\dictconfig.py", line 164, in _validate_get
    self._format_and_raise(
  File "C:\Users\Stavros\miniconda3\envs\pyt_pg\Lib\site-packages\omegaconf\base.py", line 231, in _format_and_raise
    format_and_raise(
  File "C:\Users\Stavros\miniconda3\envs\pyt_pg\Lib\site-packages\omegaconf\_utils.py", line 899, in format_and_raise
    _raise(ex, cause)
  File "C:\Users\Stavros\miniconda3\envs\pyt_pg\Lib\site-packages\omegaconf\_utils.py", line 797, in _raise
    raise ex.with_traceback(sys.exc_info()[2])  # set env var OC_CAUSE=1 for full trace
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
omegaconf.errors.ConfigAttributeError: Key 'lr' is not in struct
    full_key: optimizer.lr
    object_type=dict

[2024-02-09 17:14:17,700][flwr][ERROR] - Your simulation crashed :(. This could be because of several reasons. The most common are: 
	 > Sometimes, issues in the simulation code itself can cause crashes. It's always a good idea to double-check your code for any potential bugs or inconsistencies that might be contributing to the problem. For example: 
		 - You might be using a class attribute in your clients that hasn't been defined.
		 - There could be an incorrect method call to a 3rd party library (e.g., PyTorch).
		 - The return types of methods in your clients/strategies might be incorrect.
	 > Your system couldn't fit a single VirtualClient: try lowering `client_resources`.
	 > All the actors in your pool crashed. This could be because: 
		 - You clients hit an out-of-memory (OOM) error and actors couldn't recover from it. Try launching your simulation with more generous `client_resources` setting (i.e. it seems {'num_cpus': 2, 'num_gpus': 0.0} is not enough for your run). Use fewer concurrent actors. 
		 - You were running a multi-node simulation and all worker nodes disconnected. The head node might still be alive but cannot accommodate any actor with resources: {'num_cpus': 2, 'num_gpus': 0.0}.
Take a look at the Flower simulation examples for guidance <https://flower.dev/docs/framework/how-to-run-simulations.html>.
